services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - gkeeper-net

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - gkeeper-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - gkeeper-net

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                 cub kafka-ready -b kafka:9092 1 180 && \
                 kafka-topics --create --topic gkeeper-input-topic --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 && \
                 kafka-topics --create --topic gkeeper-output-topic --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092'"
    networks:
      - gkeeper-net
        
  game-keeper:
    image: docker.io/library/game-keeper:latest
    depends_on:
      - kafka
      - kafka-init-topics
    ports:
      - 8081:8081
    networks: 
      - gkeeper-net

networks:
  gkeeper-net:
    driver: bridge
